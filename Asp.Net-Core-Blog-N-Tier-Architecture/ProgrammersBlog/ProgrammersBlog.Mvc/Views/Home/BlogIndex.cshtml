@using System.Text.RegularExpressions;
@model ProgrammersBlog.Entities.Dtos.ArticleListDto

@{

    Layout = "_BlogLayout";
    ViewBag.Title = "Cok yakında";
    Regex regex = new Regex("<[^>]*>");
}



<section class="blog_area section-padding">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 mb-5 mb-lg-0">
                <div class="blog_left_sidebar">
                

                    @foreach(var article in Model.Articles)
                    {
                        <!-- Bloglar-->
                        <article class="blog_item">
                            <div class="blog_item_img">
                                <img class="card-img rounded-0" src="~/img/@article.Thumbnail" alt="@article.Title">
                                <a href="#" class="blog_item_date">
                                    
                                    
                                </a>
                            </div>

                            <div class="blog_details">
                                <a class="d-inline-block" href="single-blog.html">
                                    <h2 >@article.Title</h2>
                                </a>
                                <p>
                                    @{
                                        article.Content = regex.Replace(article.Content, "");
                                    }
                                    @(article.Content.Length > 150 ? article.Content.Substring(0,150) :article.Content)
                                </p>

                                <a asp-controller="Article" asp-action="Detail" class="btn btn-primary" asp-route-articleId="@article.Id"> Devamını Oku </a>
                                <ul class="blog-info-link">
                                    <li><a href="#"><i class="fa fa-user"></i> @article.User.UserName tarafından @article.Date tarihinde oluşturulmuştur. </a> </li>
                                    <li><a href="#"><i class="fa fa-user"></i> @article.Category.Name</a></li>
                                   
                                    <li><a href="#"><i class="fa fa-comments"></i> @article.CommentCount</a></li>
                                </ul>
                            </div>
                        </article>

                    }


               

               

                

                    
                </div>
            </div>
            @await Component.InvokeAsync("RightSideBar")
         
        </div>
        <ul class="pagination justify-content-center mb-4">
            @{



                @if (Model.ShowPrevious)
                {
                    @if (Model.CategoryId != null)
                    {
                        <li class="page-item">

                            <a class="page-link" asp-route-currentPage="@(Model.CurrentPage -1 )"  asp-route-isAscending ="@Model.IsAscending"  asp-route-pageSize="@Model.PageSize"     asp-route-categoryId="@Model.CategoryId.Value"> Önceki </a>

                        </li>
                    }
                    else

                    {
                        <li class="page-item">

                            <a class="page-link" asp-route-isAscending ="@Model.IsAscending"  asp-route-pageSize="@Model.PageSize"  asp-route-currentPage="@(Model.CurrentPage -1 )"> Önceki</a>

                        </li>
                    }


                }

                @for (var i = 1; i <= Model.TotalPages; i++)
                {

                    <li class="page-item @(i == Model.CurrentPage ? "active" :"")">
                        @if (Model.CategoryId != null)
                        {

                            <a class="page-link" asp-route-isAscending ="@Model.IsAscending"  asp-route-pageSize="@Model.PageSize"   asp-route-currentPage="@i" asp-route-categoryId="@Model.CategoryId.Value"> @i</a>

                        }
                        else
                        {

                            <a class="page-link" asp-route-isAscending ="@Model.IsAscending"  asp-route-pageSize="@Model.PageSize"   asp-route-currentPage="@i"> @i</a>

                        }
                    </li>
                }
                @if (Model.ShowNext)
                {
                    @if (Model.CategoryId != null)
                    {
                        <li class="page-item">

                            <a class="page-link" asp-route-isAscending="@Model.IsAscending" asp-route-pageSize="@Model.PageSize" asp-route-currentPage="@(Model.CurrentPage +1 )" asp-route-categoryId="@Model.CategoryId.Value"> Sonraki </a>

                        </li>
                    }
                    else

                    {
                        <li class="page-item">

                            <a class="page-link" asp-route-isAscending="@Model.IsAscending" asp-route-pageSize="@Model.PageSize" asp-route-currentPage="@(Model.CurrentPage +1 )"> Sonraki</a>

                        </li>
                    }


                }

            }

        </ul>
    </div>

  
</section>


